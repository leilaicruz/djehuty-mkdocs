openapi: 3.0.0
info:
  title: Djehuty API
  version: 1.0.0
  description: API documentation for Djehuty's public and private interfaces.

servers:
  - url: https://cors-anywhere.herokuapp.com/https://data.4tu.nl
    description: Proxy server to bypass CORS

paths:
  /portal:
    get:
      summary: "Retrieve the portal home page"
      description: >
        This endpoint serves the home page of the Djehuty portal, providing repository
        statistics, the latest datasets, and customizable display options.
        The response is rendered as an HTML page.
      tags:
        - Portal
      parameters:
        - in: query
          name: show_portal_summary
          required: false
          schema:
            type: boolean
          description: >
            Flag to indicate whether the portal summary section should be displayed.
            Defaults to `true`.
        - in: query
          name: show_institutions
          required: false
          schema:
            type: boolean
          description: >
            Flag to indicate whether institutions information should be displayed.
            Defaults to `true`.
        - in: query
          name: show_science_categories
          required: false
          schema:
            type: boolean
          description: >
            Flag to indicate whether scientific categories should be displayed.
            Defaults to `true`.
        - in: query
          name: show_latest_datasets
          required: false
          schema:
            type: boolean
          description: >
            Flag to indicate whether the latest datasets should be displayed.
            Defaults to `true`.
      responses:
        '200':
          description: "Portal home page rendered successfully"
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>...</body></html>"
        '406':
          description: "The client does not accept HTML responses."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not Acceptable: The requested resource is only capable of generating HTML responses."
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."


  
  /v2/articles:
    get:
      summary: Retrieve a list of articles
      description: >
        Fetches a list of publicly available articles with optional filters for
        sorting, pagination, and specific fields like DOIs or modification dates.
      tags:
        - Public Articles
      parameters:
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: 
              - published_date
              - title
              - doi
              - modified_date
            default: published_date
          description: >
            Field to use for sorting. Options are:
            - `published_date`: Sort by publication date (default).
            - `title`: Sort by article title.
            - `doi`: Sort by DOI.
            - `modified_date`: Sort by last modification date.
        - in: query
          name: order_direction
          schema:
            type: string
            description: Sort direction as  `asc` or `desc`.
        - in: query
          name: institution
          schema:
            type: string
          description: Institution identifier to filter results.
        - in: query
          name: published_since
          schema:
            type: string
          description: >
            Show only articles published since this date. Format: `YYYY-MM-DD`.
        - in: query
          name: modified_since
          schema:
            type: string
          description: >
            Show only articles modified since this date. Format: `YYYY-MM-DD`.
        - in: query
          name: group
          schema:
            type: string
          description: Filter results by group identifier.
        - in: query
          name: resource_doi
          schema:
            type: string
          description: Filter results by DOI of associated journal publication.
        - in: query
          name: item_type
          schema:
            type: integer
          description: Type of items to return `3` for datasets, `9` for software.
        - in: query
          name: doi
          schema:
            type: string
          description: Filter results by dataset DOI.
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination.
        - in: query
          name: page_size
          schema:
            type: integer
          description: Number of results per page.
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: Unique identifier for the article.
                    title:
                      type: string
                      description: Title of the article.
                    doi:
                      type: string
                      description: DOI of the article.
                    published_date:
                      type: string
                      format: date-time
                      description: Publication date of the article.
        '400':
          description: Invalid request parameters.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

  /v2/articles/{dataset-id}:
    get:
      summary: Retrieve dataset details
      description: >
        Retrieves detailed information about a specific dataset by its ID.
      tags:
        - Public Articles
      parameters:
        - in: path
          name: dataset-id
          required: true
          schema:
            type: string
          description: Unique identifier of the dataset.
      responses:
        '200':
          description: Dataset details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the dataset.
                  title:
                    type: string
                    description: Title of the dataset.
                  doi:
                    type: string
                    description: DOI of the dataset.
                  description:
                    type: string
                    description: Description of the dataset.
                  published_date:
                    type: string
                    format: date-time
                    description: Publication date.
        '400':
          description: Invalid dataset ID.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '404':
          description: Dataset not found.

  /v2/account/articles:
    get:
      summary: Retrieve private articles
      description: >
        Fetches a list of private articles associated with the authenticated account.
        Requires a valid `Bearer` token.
      tags:
        - Private Articles
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of articles to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: Number of articles to skip.
      responses:
        '200':
          description: List of private articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the article.
                    title:
                      type: string
                      description: Title of the article.
                    doi:
                      type: string
                      description: DOI of the article.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

    post:
      summary: Create a private article
      description: >
        Creates a new private article for the authenticated account.
        Requires a valid `Bearer` token.
      tags:
        - Private Articles
      security:
        - BearerAuth: []
      requestBody:
        description: Article details to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the article.
                description:
                  type: string
                  description: Detailed description of the article.
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags for categorization.
      responses:
        '201':
          description: Article created successfully.
        '400':
          description: Invalid input data.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

components:
  schemas:
    PortalSummaryData:
      type: object
      properties:
        datasets:
          type: integer
          description: Total number of datasets in the repository.
        authors:
          type: integer
          description: Total number of authors.
        collections:
          type: integer
          description: Total number of collections.
        files:
          type: integer
          description: Total number of files.
        bytes:
          type: string
          description: Total size of all files in the repository (formatted string).

    LatestDataset:
      type: object
      properties:
        url:
          type: string
          description: The URL to access the dataset.
          example: "/datasets/1234-5678-90ab-cdef"
        title:
          type: string
          description: The title of the dataset.
          example: "Example Dataset Title"
        published_date:
          type: string
          format: date
          description: The publication date of the dataset.
          example: "2023-01-01"
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Use a Bearer token for authentication. Provide the token in the
        `Authorization` header as "Bearer YOUR_TOKEN_HERE".
