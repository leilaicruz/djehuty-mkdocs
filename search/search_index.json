{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello","text":""},{"location":"intro/","title":"Introduction","text":""},{"location":"intro/#chapter-1introduction","title":"Chapter\u00a01Introduction","text":"<p>djehuty is the data repository system developed by and for 4TU.ResearchData. The name finds its inspiration in Thoth, the Egyptian entity that introduced the idea of writing.</p>"},{"location":"intro/#11-obtaining-the-source-code","title":"1.1  Obtaining the source code","text":"<p>The source code can be downloaded at the Releases1  page. Make sure to download the djehuty-24.10.1.tar.gz file. Or, directly download the tarball using the command-line:</p> <pre><code>curl -LO https://github.com/4TUResearchData/djehuty/releases/\\  \ndownload/v24.10.1/djehuty-24.10.1.tar.gz\n</code></pre> <p>After obtaining the tarball, it can be unpacked using the tar command:</p> <pre><code>tar zxvf djehuty-24.10.1.tar.gz\n</code></pre>"},{"location":"intro/#12-installing-the-prerequisites","title":"1.2  Installing the prerequisites","text":"<p>The djehuty program needs Python (version 3.8 or higher) and Git to be installed. Additionally, a couple of Python packages need to be installed. The following sections describe installing the prerequisites on various GNU/Linux distributions. To put the software in the context of its environment, figure 1.1 displays the complete run-time dependencies from djehuty to glibc.</p> <p></p> <p>Figure\u00a01.1: Run-time references when constructed with the packages from GNU Guix. \u00a0\u00a0</p> <p>The web service of djehuty stores its information in a SPARQL 1.1 (\u201cSPARQL 1.1 Overview\u201d,\u00a02013) endpoint. We recommend either Blazegraph2 or Virtuoso open-source edition3 .</p>"},{"location":"intro/#121-installation-on-enterprise-linux-7","title":"1.2.1  Installation on Enterprise Linux 7+","text":"<p>The Python packages on Enterprise Linux version 7 or higher seem to be too far out of date. So installing the prerequisites involves two steps. The first step involves installing system-wide packages for Python and Git.</p> <pre><code>yum install python39 git\n</code></pre> <p>The second step involves using Python\u2019s venv module to install the Python packages in a virtual environment:</p> <pre><code>python3.9 -m venv djehuty-env \n. djehuty-env/bin/activate \ncd /path/to/the/repository/checkout/root \npip install -r requirements.txt\n</code></pre>"},{"location":"intro/#13-installation-instructions","title":"1.3  Installation instructions","text":"<p>After obtaining the source code (see section 1.1 \u2018Obtaining the source code\u2019) and installing the required tools (see section 1.2 \u2018Installing the prerequisites\u2019), building involves running the following commands:</p> <pre><code>cd djehuty-24.10.1 \nautoreconf -vif # Only needed if the \"./configure\" step does not work. \n./configure \nmake \nmake install\n</code></pre> <p>To run the make install command, super user privileges may be required. Specify a --prefix to the configure script to install the tools to a user-writeable location to avoid needing super user privileges. After installation, the djehuty program will be available.</p>"},{"location":"intro/#14-pre-built-containers","title":"1.4  Pre-built containers","text":"<p>4TU.ResearchData provides Docker container images as a convenience service for each monthly djehuty release. The following table outlines the meaning of each image provided. The images are published to Docker Hub4 .</p> <p>| Image tag | Description | | devel | Image meant for development purposes. Before it executes the djehuty  command it checks out the latest codebase. So re-running the same  container image may result in running a different version of djehuty. | | latest | This image points to the latest djehuty release. It does not automatically  update the djehuty codebase. | | XX.X | 4TU.ResearchData releases a version each month where the number before  the dot refers to the year and the number after the dot refers to the month.  Use a specific version image when you want to upgrade at your own pace. | |  |</p> <p>To build the container images for yourself, see the build instructions in the \u2018docker/Dockerfile\u2019 file.</p>"}]}