openapi: 3.0.0
info:
  title: Djehuty API
  version: 1.0.0
  description: API documentation for Djehuty's public interface
# servers:
#   - url: https://data.4tu.nl
#     description: Primary Djehuty API server
servers:
  - url: https://cors-anywhere.herokuapp.com/https://data.4tu.nl
    description: Proxy server to bypass CORS

paths:
  /v2/articles:
    get:
      summary: Retrieve a list of articles
      tags:
        - Public Articles
      parameters:
        - in: query
          name: order
          required: false
          schema:
            type: string
          description: Field to use for sorting
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
          description: Sort direction. It can be either `asc` or `desc`
        - in: query
          name: institution
          required: false
          schema:
            type: string
          description: Institution identifier to filter results
        - in: query
          name: published_since
          required: false
          schema:
            type: string
          description: >
            When set, datasets published before this timestamp are dropped from
            the results. The format is `YYYY-MM-DD`
        - in: query
          name: modified_since
          required: false
          schema:
            type: string
          description: >
            When set, only datasets modified after this timestamp are shown in
            the results. The format is `YYYY-MM-DD`
        - in: query
          name: group
          required: false
          schema:
            type: string
          description: The group identifier to filter results on.
        - in: query
          name: resource_doi
          required: false
          schema:
            type: string
          description: >
            The DOI of the associated journal publication. When set, only
            returns datasets associated with this DOI.
        - in: query
          name: item_type
          required: false
          schema:
            type: integer
          description: >
            The type of items to return. Either 3 for datasets or 9 for software.
        - in: query
          name: doi
          required: false
          schema:
            type: string
          description: >
            The DOI of the dataset to search for. If provided, filters results
            by this DOI.
        - in: query
          name: handle
          required: false
          schema:
            type: string
          description: Unused.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: The page number used in combination with page_size.
        - in: query
          name: page_size
          required: false
          schema:
            type: integer
          description: >
            The number of datasets per page. Used in combination with the `page`
            parameter.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Maximum number of results to return
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: Unique identifier of the article
                    title:
                      type: string
                      description: Title of the article
                    doi:
                      type: string
                      description: DOI of the article
                    published_date:
                      type: string
                      format: date-time
                      description: Publication date
        '400':
          description: Bad request due to invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Invalid parameter 'order'"
        '401':
          description: Unauthorized access due to missing or invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              
  /v2/articles/{dataset-id}:
    get:
      summary: "Retrieve details of a specific dataset"
      description: >
        Fetches detailed information about a specific dataset using its dataset ID.
        Optionally, a DOI can be provided to filter results further.
      operationId: "getDatasetDetails"
      tags:
        - Public Articles
      parameters:
        - in: path
          name: dataset-id
          required: true
          schema:
            type: string
          description: >
            The unique identifier of the dataset whose details are being retrieved.
      responses:
        '200':
          description: "A successful response containing dataset details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: "Unique identifier of the dataset"
                    example: "12345"
                  doi:
                    type: string
                    description: "DOI of the dataset"
                    example: "10.4124/example-doi"
                  title:
                    type: string
                    description: "Title of the dataset"
                    example: "Dataset Title Example"
                  description:
                    type: string
                    description: "Description of the dataset"
                    example: "This dataset contains research data on XYZ."
                  published_date:
                    type: string
                    format: date-time
                    description: "Date when the dataset was published"
                    example: "2023-01-01T12:00:00Z"
                  modified_date:
                    type: string
                    format: date-time
                    description: "Date when the dataset was last modified"
                    example: "2023-01-15T15:00:00Z"
                  authors:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: "Name of the author"
                          example: "John Doe"
                        orcid:
                          type: string
                          description: "ORCID of the author"
                          example: "0000-0001-2345-6789"
                  keywords:
                    type: array
                    items:
                      type: string
                    description: "Keywords associated with the dataset"
                    example: ["biology", "genomics", "data science"]
        '400':
          description: "Bad request due to invalid dataset ID or DOI"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Invalid dataset ID or DOI"
        '401':
          description: "Unauthorized access due to missing or invalid credentials"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Unauthorized"
        '403':
          description: "Forbidden access due to insufficient permissions"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Forbidden"
        '404':
          description: "Dataset not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Dataset not found"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "An unexpected error occurred"
      
  /v2/articles/{dataset-id}/versions:
    get:
      summary: "Retrieve all versions of a dataset"
      description: >
        Fetches a list of all versions of a specific dataset identified by the dataset ID.
        Each version contains metadata and version-specific details.
      operationId: "getDatasetVersions"
      tags:
        - Public Articles
      parameters:
        - in: path
          name: dataset-id
          required: true
          schema:
            type: string
          description: >
            The unique identifier of the dataset for which all versions are being retrieved.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: >
            Maximum number of versions to return in the response.
        - in: query
          name: page
          required: false
          schema:
            type: integer
          description: >
            The page number to retrieve, used in combination with the `limit` parameter for pagination.
      responses:
        '200':
          description: "A successful response containing the list of dataset versions"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    version_id:
                      type: string
                      description: "Unique identifier for the version"
                      example: "v1.0.0"
                    dataset_id:
                      type: string
                      description: "Identifier of the parent dataset"
                      example: "12345"
                    version_number:
                      type: integer
                      description: "The version number of the dataset"
                      example: 1
                    title:
                      type: string
                      description: "Title of the dataset version"
                      example: "Dataset Title Example - Version 1"
                    description:
                      type: string
                      description: "Description of this specific version"
                      example: "This version includes additional metadata and corrections."
                    doi:
                      type: string
                      description: "DOI associated with this version"
                      example: "10.4124/example-doi-v1"
                    published_date:
                      type: string
                      format: date-time
                      description: "Publication date of this version"
                      example: "2023-02-01T12:00:00Z"
                    modified_date:
                      type: string
                      format: date-time
                      description: "Last modification date of this version"
                      example: "2023-02-10T15:00:00Z"
        '400':
          description: "Bad request due to invalid dataset ID or query parameters"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Invalid dataset ID or query parameters"
        '401':
          description: "Unauthorized access due to missing or invalid credentials"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Unauthorized"
        '403':
          description: "Forbidden access due to insufficient permissions"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Forbidden"
        '404':
          description: "Dataset not found or no versions available"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "Dataset not found"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message"
                    example: "An unexpected error occurred"
    
  /v2/articles/search:
    post:
      summary: "Search for articles"
      description: >
        Searches for articles based on the provided search term.
        The `search_for` field is required in the request body.
      operationId: "searchArticles"
      tags:
        - "Public Articles"
      requestBody:
        description: "Search term to find articles"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search_for:
                  type: string
                  description: "The term to search for in articles"
                  example: "wingtips"
      responses:
        '200':
          description: "A successful response containing search results"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: "Unique identifier for the article"
                    title:
                      type: string
                      description: "Title of the article"
                    doi:
                      type: string
                      description: "DOI of the article"
                    published_date:
                      type: string
                      format: date-time
                      description: "Publication date of the article"
        '400':
          description: "Invalid request due to malformed input"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message describing why the request failed"
                    example: "Invalid input format"
        '500':
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Error message describing the server error"
                    example: "An unexpected error occurred"


  
  /v2/account/articles:
    get:
      summary: Retrieve private articles
      description: >
        Fetches a list of private articles associated with the authenticated account.
        Requires a valid authorization token in the `Authorization` header.
      tags:
        - Private Articles
      security:
        - BearerAuth: []  # Requires a Bearer token for authentication
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
          description: >
            The maximum number of articles to return in the response.
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
          description: >
            The number of articles to skip in the output. Used in combination with `limit`.
      responses:
        '200':
          description: A list of private articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier of the article
                      example: "12345"
                    title:
                      type: string
                      description: Title of the article
                      example: "Example Article Title"
                    doi:
                      type: string
                      description: DOI of the article
                      example: "10.4124/example-doi"
                    published_date:
                      type: string
                      format: date-time
                      description: Publication date of the article
                      example: "2023-01-01T12:00:00Z"
                    modified_date:
                      type: string
                      format: date-time
                      description: Last modification date of the article
                      example: "2023-01-15T15:00:00Z"
        '400':
          description: Invalid request due to malformed parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing why the request failed
                    example: "Invalid query parameter"
        '401':
          description: Unauthorized access due to missing or invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Unauthorized"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "An unexpected error occurred"

    post:
      summary: Create a private article
      description: >
        Creates a new private article for the authenticated account.
        Requires a valid authorization token in the `Authorization` header.
      tags:
        - Private Articles
      security:
        - BearerAuth: []  # Requires a Bearer token for authentication
      requestBody:
        description: Details of the article to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the article
                  example: "My Private Dataset"
                description:
                  type: string
                  description: A detailed description of the article
                  example: "This dataset contains information about..."
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags associated with the article
                  example: ["tag1", "tag2"]
                categories:
                  type: array
                  items:
                    type: string
                  description: Categories associated with the article
                  example: ["biology", "genomics"]
                license:
                  type: integer
                  description: License ID for the article
                  example: 123
                doi:
                  type: string
                  description: DOI for the article (if applicable)
                  example: "10.4124/example-doi"
                language:
                  type: string
                  description: The language of the article
                  example: "en"
                timeline:
                  type: object
                  description: Timeline events for the article
                  properties:
                    publisherPublication:
                      type: string
                      format: date
                      description: Date of publication by the publisher
                      example: "2023-01-01"
                    submission:
                      type: string
                      format: date
                      description: Date of submission
                      example: "2023-01-02"
                    posted:
                      type: string
                      format: date
                      description: Date of posting
                      example: "2023-01-03"
                    revision:
                      type: string
                      format: date
                      description: Date of revision
                      example: "2023-01-04"
      responses:
        '201':
          description: Article successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: URL of the created article
                    example: "https://data.4tu.nl/v2/account/articles/12345"
                  warnings:
                    type: array
                    items:
                      type: string
                    description: Warnings generated during the creation process
                    example: []
        '400':
          description: Invalid request due to malformed input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Title is required"
        '401':
          description: Unauthorized access due to missing or invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Unauthorized"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "An unexpected error occurred"

components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: >
        Use a Bearer token for authentication. Provide the token in the
        Authorization header as "Bearer YOUR_TOKEN_HERE".



