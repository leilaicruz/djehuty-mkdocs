openapi: 3.0.0
info:
  title: Djehuty API
  version: 1.0.0
  description: API documentation for Djehuty's public and private interfaces.

servers:
  - url: https://cors-anywhere.herokuapp.com/https://data.4tu.nl
    description: Proxy server to bypass CORS
  # - url: https://data.4tu.nl/

paths:
  /v2/account/applications/authorize:
    post:
      summary: Authorize Application
      description: Authorizes an application to access user accounts via the API. Validates client credentials and user permissions.
      tags:
        - Authenticate and authorize
      requestBody:
        description: Client and user credentials for authorization.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: The client ID of the application.
                client_secret:
                  type: string
                  description: The client secret of the application.
                user_credentials:
                  type: object
                  description: The user credentials for authorization.
      responses:
        '200':
          description: Successfully authorized the application.
        '400':
          description: Malformed request.
        '401':
          description: Authentication failed.
        '403':
          description: User lacks necessary permissions.

  /v2/token:
    post:
      summary: Generate or Refresh Token
      description: Generates or refreshes an API token for authenticated users or applications.
      tags:
        - Authenticate and authorize
      requestBody:
        description: Credentials or refresh token for token generation.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token]
                  description: The type of grant requested.
                code:
                  type: string
                  description: The authorization code for the token.
                refresh_token:
                  type: string
                  description: The refresh token for generating a new token.
      responses:
        '200':
          description: Successfully generated or refreshed the token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The generated access token.
                  expires_in:
                    type: integer
                    description: The time in seconds until the token expires.
        '400':
          description: Malformed request.
        '401':
          description: Authentication failed.
        '403':
          description: Client lacks necessary permissions.

 
  /v2/articles:
    get:
      summary: Retrieve a list of articles
      description: >
        Fetches a list of publicly available articles with optional filters for
        sorting, pagination, and specific fields like DOIs or modification dates.
      tags:
        - Public Articles
      parameters:
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: 
              - published_date
              - title
              - doi
              - modified_date
            default: published_date
          description: >
            Field to use for sorting. Options are:
            - `published_date`: Sort by publication date (default).
            - `title`: Sort by article title.
            - `doi`: Sort by DOI.
            - `modified_date`: Sort by last modification date.
        - in: query
          name: order_direction
          schema:
            type: string
            description: Sort direction as  `asc` or `desc`.
        - in: query
          name: institution
          schema:
            type: string
          description: Institution identifier to filter results.
        - in: query
          name: published_since
          schema:
            type: string
          description: >
            Show only articles published since this date. Format: `YYYY-MM-DD`.
        - in: query
          name: modified_since
          schema:
            type: string
          description: >
            Show only articles modified since this date. Format: `YYYY-MM-DD`.
        - in: query
          name: group
          schema:
            type: string
          description: Filter results by group identifier.
        - in: query
          name: resource_doi
          schema:
            type: string
          description: Filter results by DOI of associated journal publication.
        - in: query
          name: item_type
          schema:
            type: integer
          description: Type of items to return `3` for datasets, `9` for software.
        - in: query
          name: doi
          schema:
            type: string
          description: Filter results by dataset DOI.
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination.
        - in: query
          name: page_size
          schema:
            type: integer
          description: Number of results per page.
      responses:
        '200':
          description: A list of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: Unique identifier for the article.
                    title:
                      type: string
                      description: Title of the article.
                    doi:
                      type: string
                      description: DOI of the article.
                    published_date:
                      type: string
                      format: date-time
                      description: Publication date of the article.
        '400':
          description: Invalid request parameters.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

  /v2/articles/{dataset-id}:
    get:
      summary: Retrieve dataset details
      description: >
        Retrieves detailed information about a specific dataset by its ID.
      tags:
        - Public Articles
      parameters:
        - in: path
          name: dataset-id
          required: true
          schema:
            type: string
          description: Unique identifier of the dataset.
      responses:
        '200':
          description: Dataset details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the dataset.
                  title:
                    type: string
                    description: Title of the dataset.
                  doi:
                    type: string
                    description: DOI of the dataset.
                  description:
                    type: string
                    description: Description of the dataset.
                  published_date:
                    type: string
                    format: date-time
                    description: Publication date.
        '400':
          description: Invalid dataset ID.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '404':
          description: Dataset not found.

  /v2/account/articles:
    get:
      summary: Retrieve private articles
      description: >
        Fetches a list of private articles associated with the authenticated account.
        Requires a valid `Bearer` token.
      tags:
        - Private Articles
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of articles to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: Number of articles to skip.
      responses:
        '200':
          description: List of private articles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the article.
                    title:
                      type: string
                      description: Title of the article.
                    doi:
                      type: string
                      description: DOI of the article.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

    post:
      summary: Create a private article
      description: >
        Creates a new private article for the authenticated account.
        Requires a valid `Bearer` token.
      tags:
        - Private Articles
      security:
        - BearerAuth: []
      requestBody:
        description: Article details to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the article.
                description:
                  type: string
                  description: Detailed description of the article.
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags for categorization.
      responses:
        '201':
          description: Article created successfully.
        '400':
          description: Invalid input data.
        '401':
          description: Unauthorized. Missing or invalid credentials.
        '500':
          description: Internal server error.

  /v2/account/articles/search:
    post:
      summary: Search for private articles
      description: >
        Retrieve a list of private articles filtered by the search parameters for the authenticated account. Requires a valid `Bearer` token.
      tags:
        - Private Articles
      security:
        - BearerAuth: []
      requestBody:
        description: Search term to filter list of private articles.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  description: The terms to search for
      responses:
        '200':
          description: List of datasets
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Legacy identifier for the dataset.
                  uuid:
                    type: string
                    description: Unique identifier for the dataset.  
                  title:
                    type: string
                    description: Title of the dataset.
                  doi:
                    type: string
                    description: DOI of the dataset.
                  handle:
                    type: string
                    description: ????.
                  url:
                    type: string
                    description: URL of the dataset.  
                  published_date:
                    type: string
                    format: date-time
                    description: Publication date
                  thumb:
                    type: object
                    description: Thumbnail of the dataset.
                  defined_type:
                    type: integer
                    description: 3 for dataset and 9 for software.
                  defined_type_name:
                    type: string
                    description: Dataset or software. 
                  group_id:
                    type: integer
                    description: Insititution ID.  
                  url_private_api:
                    type: string
                    description: Private v2 API endpoint.  
                  url_public_api:
                    type: string
                    description: Public v2 API endpoint. 
                  url_private_html:
                    type: string
                    description: Private html URL. 
                  url_public_html:
                    type: string
                    description: Public html URL.
                  timeline:
                    type: object
                    properties:
                      posted:
                        type: string
                        format: date-time
                        nullable: true
                        description: The time the item was posted
                      firstOnline:
                        type: string
                        format: date-time
                        nullable: true
                        description: The first time the item was online
                      revision:
                        type: string
                        nullable: true
                        description: The revision of the item  
        '400':
          description: Failed to decode JSON object.
        '403':
          description: Invalid or unknown session token.
        '404':
          description: Dataset not found.
        '415':
          description: Unsupported Media Type.
          
  /v2/account/institution:
    get:
      summary: Retrieve User's Institution
      description: Retrieves information about the user's associated institution within the private account context.
      tags:
        - Private Institutions
      responses:
        '200':
          description: Successfully retrieved the institution details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  institution_id:
                    type: string
                    description: The unique identifier of the institution.
                  name:
                    type: string
                    description: The name of the institution.
                  description:
                    type: string
                    description: A brief description of the institution.
        '401':
          description: Authentication failed.
        '403':
          description: User lacks necessary permissions.
        '404':
          description: Institution not found.

  /v2/account/institution/users/{account_uuid}:
    get:
      summary: Retrieve User's Institution by Account UUID
      description: Retrieves information about a specific user's association with an institution based on their account UUID.
      tags:
        - Private Institutions
      parameters:
        - name: account_uuid
          in: path
          required: true
          description: The unique UUID of the account.
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the user's institution details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_uuid:
                    type: string
                    description: The unique UUID of the account.
                  institution_id:
                    type: string
                    description: The unique identifier of the institution.
                  institution_name:
                    type: string
                    description: The name of the institution.
        '401':
          description: Authentication failed.
        '403':
          description: User lacks necessary permissions.
        '404':
          description: Account or institution not found.

  /v2/account/institution/accounts:
    get:
      summary: Retrieve Institution Accounts
      description: Retrieves a list of accounts associated with the user's institution within the private account context.
      tags:
        - Private Institutions
      responses:
        '200':
          description: Successfully retrieved the list of accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_uuid:
                      type: string
                      description: The unique UUID of the account.
                    email:
                      type: string
                      description: The email address of the account holder.
                    name:
                      type: string
                      description: The name of the account holder.
        '401':
          description: Authentication failed.
        '403':
          description: User lacks necessary permissions.
        '500':
          description: Internal server error.
          
  /v2/collections:
    get:
      summary: Retrieve Collections
      description: Retrieves a list of collections available to the authenticated user or application.
      tags:
        - Collections
      responses:
        '200':
          description: Successfully retrieved the collections.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the collection.
                    name:
                      type: string
                      description: The name of the collection.
                    description:
                      type: string
                      description: A brief description of the collection.
        '401':
          description: Authentication failed.
        '403':
          description: Client lacks necessary permissions.
        '500':
          description: Internal server error.


components:
  schemas:
    PortalSummaryData:
      type: object
      properties:
        datasets:
          type: integer
          description: Total number of datasets in the repository.
        authors:
          type: integer
          description: Total number of authors.
        collections:
          type: integer
          description: Total number of collections.
        files:
          type: integer
          description: Total number of files.
        bytes:
          type: string
          description: Total size of all files in the repository (formatted string).

    LatestDataset:
      type: object
      properties:
        url:
          type: string
          description: The URL to access the dataset.
          example: "/datasets/1234-5678-90ab-cdef"
        title:
          type: string
          description: The title of the dataset.
          example: "Example Dataset Title"
        published_date:
          type: string
          format: date
          description: The publication date of the dataset.
          example: "2023-01-01"
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Use a Bearer token for authentication. Provide the token in the
        `Authorization` header as "Bearer YOUR_TOKEN_HERE".
